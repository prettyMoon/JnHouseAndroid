package jnhouse.topwellsoft.com.jnhouse_android.ui.mine;

import android.os.Build;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.topwellsoft.androidutils.PreferencesUtils;

import net.tsz.afinal.FinalHttp;
import net.tsz.afinal.http.AjaxCallBack;
import net.tsz.afinal.http.AjaxParams;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import jnhouse.topwellsoft.com.jnhouse_android.R;
import jnhouse.topwellsoft.com.jnhouse_android.adapter.MineBuyListViewAdapter;
import jnhouse.topwellsoft.com.jnhouse_android.adapter.MineSellSecondListViewAdapter;
import jnhouse.topwellsoft.com.jnhouse_android.constant.JnHouse_Record;
import jnhouse.topwellsoft.com.jnhouse_android.model.LoginEntity;
import jnhouse.topwellsoft.com.jnhouse_android.model.MineBuyEntity;
import jnhouse.topwellsoft.com.jnhouse_android.model.MineBuyList;
import jnhouse.topwellsoft.com.jnhouse_android.model.MineSellSecondEntity;
import jnhouse.topwellsoft.com.jnhouse_android.model.MineSellSecondList;
import jnhouse.topwellsoft.com.jnhouse_android.ui.question.MyDiaLog;

import jnhouse.topwellsoft.com.jnhouse_android.util.ToastUtil;

public class MineBuy extends AppCompatActivity implements View.OnClickListener{
    private ImageView mImageView;
    private TextView mTextView;
    private ListView mListView;
    private MineBuyListViewAdapter mListViewAdapter;
    private List<MineBuyEntity> mBuyList;

    private String user_id;
    private String currentPage = "1";
    private String state = "0";

    private Button mButton_del;
    private MyDiaLog diaLog;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_mine_buy);
        mButton_del = (Button) findViewById(R.id.mine_buy_delete_btn);
        mImageView = (ImageView) findViewById(R.id.mine_buy_back_iv);
        mTextView = (TextView) findViewById(R.id.mine_buy_edit_tv);
        mListView = (ListView) findViewById(R.id.mine_buy_lv);
        mBuyList = new ArrayList<MineBuyEntity>();
        mImageView.setOnClickListener(this);
        mTextView.setOnClickListener(this);
        mListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
            @Override
            public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
                mButton_del.setVisibility(View.VISIBLE);
                mListViewAdapter.setCanShown();
                mButton_del.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {
                        try {
                            deleteFavorServerData(JnHouse_Record.Key_del_my_buy);
                        } catch (IOException e) {
                            e.printStackTrace();
                        }
                    }
                });
                mListViewAdapter.notifyDataSetChanged();
                return true;
            }
        });
        initBar();
        initDialog();
        try {
            getSellSecondServerData(JnHouse_Record.Mine_buy);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void initDialog() {
        diaLog = new MyDiaLog(MineBuy.this);
        diaLog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        diaLog.setCancelable(true);
        diaLog.show();
    }

    //获取要删除的问题的id
    public String getIds() {
        String str = "";
        for (int i = 0; i < mListViewAdapter.getIsSelect().size(); i++) {
            if (i == mListViewAdapter.getIsSelect().size() - 1) {
                str += mBuyList.get(Integer.parseInt(mListViewAdapter.getIsSelect().get(i))).getId();
            } else {
                str += mBuyList.get(Integer.parseInt(mListViewAdapter.getIsSelect().get(i))).getId() + ",";
            }
        }
        return str;
    }


    public void deleteFavorServerData(String url) throws IOException {
//        Toast.makeText(this,"getFavorServerData",Toast.LENGTH_SHORT).show();
        LoginEntity info = (LoginEntity) PreferencesUtils.getObject(MineBuy.this, "loginEntity");
        AjaxParams params = new AjaxParams();
        params.put("ids",getIds());
//        params.put("sell_type", "2");
        params.put("userUUID", info.getUserUUID());//登录标识

        FinalHttp fh = new FinalHttp();
        fh.get(url, params, new AjaxCallBack<Object>() {

            @Override
            public void onFailure(Throwable t, int errorNo, String strMsg) {
                Toast.makeText(MineBuy.this,"错误代码:"+errorNo,Toast.LENGTH_LONG).show();
            }

            @Override
            public void onLoading(long count, long current) {
                super.onLoading(count, current);
            }

            @Override
            public void onStart() {
                super.onStart();
            }

            @Override
            public void onSuccess(Object t) {

                try {
                    JSONObject jsonObject = new JSONObject(t.toString());
                    Gson gson = new Gson();
                    String jsonString = t.toString();
                    if (jsonString.startsWith("{\"code\":1")) {
                        ToastUtil.makeText(MineBuy.this, "未登录", ToastUtil.LENGTH_SHORT).setAnimation(R.style.PopToast).show();
                    } else if (jsonString.startsWith("{\"code\":-1")) {
                        ToastUtil.makeText(MineBuy.this, "删除异常", ToastUtil.LENGTH_SHORT).setAnimation(R.style.PopToast).show();
                    } else if (jsonString.startsWith("{\"code\":0")) {
                        ToastUtil.makeText(MineBuy.this, "删除成功", ToastUtil.LENGTH_SHORT).setAnimation(R.style.PopToast).show();
                        mListViewAdapter.setCanShown();
                        for (int i = 0; i < mListViewAdapter.getIsSelect().size(); i++) {
                            mBuyList.remove(Integer.parseInt(mListViewAdapter.getIsSelect().get(i)));
                        }
                        mListViewAdapter.notifyDataSetChanged();
                    }
                    diaLog.dismiss();
                    mButton_del.setVisibility(View.GONE);
                } catch (JSONException e) {
                    e.printStackTrace();
                }

            }
        });

    }

    private void getSellSecondServerData(String url) throws IOException {
        final LoginEntity info = (LoginEntity) PreferencesUtils.getObject(MineBuy.this, "loginEntity");
        AjaxParams params = new AjaxParams();
        params.put("user_id",info.getUser_id());//用户id
        params.put("userUUID",info.getUserUUID());
        params.put("currentPage", currentPage);//当前页
        params.put("state", state);
        FinalHttp fh = new FinalHttp();
        fh.get(url, params, new AjaxCallBack<Object>() {

            @Override
            public void onFailure(Throwable t, int errorNo, String strMsg) {
                Toast.makeText(MineBuy.this,"错误代码:"+errorNo,Toast.LENGTH_LONG).show();
            }

            @Override
            public void onLoading(long count, long current) {
                super.onLoading(count, current);
            }

            @Override
            public void onStart() {
                super.onStart();
            }

            @Override
            public void onSuccess(Object t) {

                try {
                    JSONObject jsonObject = new JSONObject(t.toString());
                    Gson gson = new Gson();
                    MineBuyList mList = gson.fromJson(t.toString(), new TypeToken<MineBuyList>() {
                    }.getType());
                    Log.i("#####",t.toString());
//                    Toast.makeText(Browse.this,jsonObject.toString(),Toast.LENGTH_LONG).show();
                    switch (mList.getCode()){
                        case 0:
                            Log.i("getCode","user_id:" + info.getUser_id() + "/t" + "currentPage:"+ currentPage + "state:" + state );
                            Log.i("#####","if");
                            mBuyList = mList.getWantBuyList();
//                        Toast.makeText(getActivity(),"size:"+mCollectionList.size(),Toast.LENGTH_SHORT).show();
//                                Log.i("#####","mCollectionList:"+mSellSecondList.toString());
                            mListViewAdapter = new MineBuyListViewAdapter(MineBuy.this,mBuyList);
//                                Log.i("#####","mListViewAdapter:"+mListViewAdapter.getCount());
                            mListView.setAdapter(mListViewAdapter);
//                                Log.i("#####","mListView:"+mListView.toString());
                            //setListViewHightBaseedOnChildren(mListView);


                            break;
                        case 1:
                            Toast.makeText(MineBuy.this,"未登录",Toast.LENGTH_SHORT).show();
                            break;
                        case -1:
                            Toast.makeText(MineBuy.this,"异常",Toast.LENGTH_SHORT).show();
                            break;
                        case 908:
                            Toast.makeText(MineBuy.this,"求购委托列表为空",Toast.LENGTH_SHORT).show();
                            break;
                        /*case 906:
                            Toast.makeText(getActivity(),"写字楼委托为空",Toast.LENGTH_SHORT).show();
                            break;
                        case 907:
                            Toast.makeText(getActivity(),"商铺委托为空",Toast.LENGTH_SHORT).show();
                            break;*/
                    }
                    if (diaLog.isShowing()) {
                        diaLog.dismiss();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }

            }
        });
    }

    public void initBar() {

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {//4.4 全透明状态栏
            getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
        }

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {//5.0 全透明实现
            Window window = getWindow();
            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                    | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
            window.setStatusBarColor(getResources().getColor(R.color.tp_index_second_house_title));//calculateStatusColor(Color.WHITE, (int) alphaValue)
        }
    }


    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.mine_buy_back_iv:
                onBackPressed();
                break;
            case R.id.mine_buy_edit_tv:
                break;
        }
    }
}
